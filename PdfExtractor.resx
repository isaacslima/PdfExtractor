<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMUCAADFAgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA4M7QANzO0KTg0tec4NLX/NzO1/zYytP84NLX/ODS1/zg0tf84NLX/NzO1/zUx
        tP81MLT/NzO1/zg0tf84NLX/NzO1/zUxtP84NLX/ODS1/zg0tf84NLX/ODS1/zg0teI4NLUfODS1AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEE+twBDQLgsOTW16Tcztf9IRLv/XlrD/zk1tf84NLX/ODS1/zcz
        tf9EQLr/eXbN/3Rxy/9IRbv/NjK0/zcztf9CP7n/YV7E/zs4tv84NLX/ODS1/zg0tf84NLX/ODS14js3
        tiA6N7YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT027AFJRvDE7N7bsNTG0/3l2zf/Dwun/PDi3/zYy
        tP84NLX/NTG0/2xpyP/r6/j/29rx/8rJ6/9fW8P/NDCz/2Rhxf/Oze3/SUa7/zcztf84NLX/ODS1/zg0
        tf85NbXjPzy3IT46twAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPTbsAUlG8MTs3tuw1MbT/fXrO/9XV
        8P9pZsf/UU6+/zk1tf80MLT/cW7K/9LR7v9XVMH/qqjf/8TD6f9APLj/Z2TG/9XU7/9LR7z/NjK0/zcz
        tf83M7X/ODS1/zk1teM/PLchPjq3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE9NuwBSUbwxOze27DUx
        tP9/fdD/9PT7/9rZ8f/Z2PH/iIbT/zYytP9xbsr/0dDu/0I/uf9VUcD/29ry/11aw/9mY8b/6Oj3/7a0
        5P+urOH/o6Hd/05Lvf83M7T/OTW14z88tyE+OrcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT027AFJR
        vDE7N7bsNTG0/4SC0f/V1O//VVLA/3990P/X1vD/TEm8/3Btyv/R0O7/Qj65/1dUwf/b2/L/XFjC/2Vi
        xv/m5vb/qqjg/6Gf3P+Xldn/TEi8/zcztf85NbXjPzy3IT46twAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABPTbsAUlG8MTs3tuw1MbT/hILR/9LS7v9JRrv/cG3K/9nZ8f9PTL7/cG3K/9PS7/9eW8P/s7Hj/7+9
        5/8+Orf/Z2TG/9bV8P9ST7//Pzu3/z46t/84NLX/ODS1/zk1teM/PLchPjq3AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE9NuwBSUbwxOze27DUxtP97ec7/7u75/9HQ7v/b2/L/mZfZ/zg0tf9qZ8f/6+r4/97e
        8//Cwen/WFXB/zQws/9kYcb/6en3/9LS7v/Oze3/wcDo/1VSwP82MrT/OTW14z88tyE+OrcAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATky7AFFQvDE6NrXsNTG0/0VBuv9xbcr/dXLM/2FdxP87N7b/NTG0/0A8
        uP9tacn/aGXH/0I+uf81MbT/NjK0/0A8uP9tasn/dnPM/3ZzzP9vbMr/Qj65/zYxtP83M7XjPTq3ITw5
        tgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiY8EAZWbCL1RTvetSUb3/UVC8/09Ou/9PTrv/UE68/1JR
        vP9SUb3/UlC8/09Ou/9PTrz/UVC8/1JRvf9SUb3/UlC8/09Ou/9PTrv/T067/09Ou/9SULz/UlG9/1NR
        veJXVr4gVlW+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrU3wDK1N8pytTf6MnU3//J1N//ydTf/8nU
        3//J1N//ydTf/8nU3//J1N//ydTf/8nU3//J1N//ydTf/8nU3//J1N//ydTf/8nU3//J1N//ydTf/8nU
        3//J1N//ydTf4srU3x/K1N8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2eXjANnl4ynZ5ePn2eXj/9nl
        4//Z5eP/2eXj/9rn5P/b5+T/2eXj/9nl4//Z5eP/2eXj/9nl4//Z5eP/2eXj/9nl4//Z5eP/2eXj/9nl
        4//Z5eP/2eXj/9nl4//Z5ePi2eXjH9nl4wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY5OMA2OTjKdjk
        4+fY5OP/2OTj/9jk4//Y5OP/vcbb/7W+2f/X4+P/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk
        4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4+LY5OMf2OTjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjk
        4wDY5OMp2OTj59jk4//Y5OP/2eXj/8jS3v9iY8H/XFu//6Kp1P/Z5eP/2OTj/9jk4//Y5OP/2OTj/9jk
        4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj4tjk4x/Y5OMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA2OTjANjk4ynY5OPn2OTj/9jk4//Z5eP/ydTf/2Vmwv91d8b/YGDB/8PN3f/Z5uP/2OTj/9jk
        4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OPi2OTjH9jk4wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADY5OMA2OTjKdjk4+fY5OP/2OTj/9jk4//Z5eP/sbnY/2Nkwf9BPrj/gYXK/9fi
        4//a5+T/2eXj/9jk4//Y5OP/2eXj/9rm5P/a5uT/2eXj/9jk4//Y5OP/2OTj/9jk4+LY5OMf2OTjAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANjk4wDY5OMp2OTj59jk4//Y5OP/2OTj/9jk4//a5uP/xtDe/4mN
        zP9PTbz/c3XG/6Sr1P/I0t7/1uLj/9vn5P/G0N7/kpfP/5Wa0P/N2OD/2eXj/9jk4//Y5OP/2OTj4tjk
        4x/Y5OMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2OTjANjk4ynY5OPn2OTj/9jk4//Y5OP/2OTj/9jk
        4//Z5eP/2ebj/4KFyv9XVr7/cXPF/2Vmwv93ecf/jZLN/1xbv/9fX8D/VlW9/5KXz//a5uT/2OTj/9jk
        4//Y5OPi2OTjH9jk4wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY5OMA2OTjKdjk4+fY5OP/2OTj/9jk
        4//Y5OP/2OTj/9jk4//a5uT/tb3Z/2prw//J09//wcvc/4SHy/9HRLn/ZmfC/2ttxP9tbsT/qrLW/9nm
        4//Y5OP/2OTj/9jk4+LY5OMf2OTjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjk4wDY5OMp2OTj59jk
        4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//T3+L/cnPG/6211//P2uD/bG7E/5OZz//V4eL/0dzh/9Pe
        4f/Y5OP/2OTj/9jk4//Y5OP/2OTj4tjk4x/Y5OMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2OTjANjk
        4ynY5OPn2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9rn5P+Vm9D/f4LJ/4iMzP95e8j/1N/i/9nl
        4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OPi2OTjH9jk4wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADY5OMA2OTjKdjk4+fY5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2ubj/7vE2/9SUb3/WVm//7/J
        3P/a5uP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4+LY5OMf2OTjAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANjk4wDY5OMp2OTj59jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Z5eP/0Nvh/1xc
        v/+Kjs3/2ebj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj4tjk4x/Y5OMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA2OTjANjk4ynY5OPn2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9nm
        4//By9z/S0m6/5OYz//b5+T/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OPi2OTjH9jk
        4wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY5OMA2OTjKdjk4+fY5OP/2OTj/9jk4//Y5OP/2OTj/9jk
        4//Y5OP/2ufk/52j0v9VVL3/gIPK/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk
        4+LY5OMf2OTjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjk4wDY5OMp2OTj59jk4//Y5OP/2OTj/9jk
        4//Y5OP/2OTj/9jk4//a5uT/i5DN/2Vmwv94e8f/1+Lj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk
        4//Y5OP/2OTj4tjk4x/Y5OMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2OTjANjk4ynY5OPn2OTj/9jk
        4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9rm5P+ss9b/V1a+/5qg0f/Z5eP/2OTj/9jk4//Y5OP/2OTj/9bi
        4f/V4uH/1eLh/9Xi4f/V4uHg1uPiHtbj4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY5OMA2OTjKdjk
        4+fY5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9fi4//K1N//1ODi/9jk4//Y5OP/2OTj/9jk
        4//W4uH/xNTV/8DR0//B0dP/wdHT+8XU1o3R3t4HzdvcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjk
        4wDY5OMp2OTj59jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9nl4//Y5OP/2OTj/9jk
        4//Y5OP/2OTj/9Xi4f/B0dP/vM7Q/73O0Pu/z9GRwdDSDcHQ0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA2OTjANjk4ynY5OPn2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk
        4//Y5OP/2OTj/9jk4//Y5OP/1eLh/8HR0/+9ztD7v8/RkcPS1A3C0dMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADY5OMA2OTjKdjk4+fY5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk
        4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//V4uH/wdHT+r/P0ZDD0tQNwtHTAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANjk4wDY5OMp2OTj59jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk
        4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9jk4//Y5OP/2OTj/9Xi4f/F1Nagv87RD8LR0wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAB/wAAA/8AAAf/AAAP8=
</value>
  </data>
</root>